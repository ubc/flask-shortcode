(function(m, k, h) { var n = [{x:342.5, y:393}, {x:656.5, y:256}, {x:985.5, y:196}, {x:1065.5, y:64}, {x:117.5, y:227}, {x:157.5, y:57}, {x:613, y:55}, {x:249.5, y:110}, {x:238.5, y:405}, {x:179, y:229}, {x:293.5, y:349}, {x:343.5, y:147}, {x:309.5, y:52}, {x:399.5, y:234}, {x:379.5, y:330}, {x:395.5, y:383}, {x:472.5, y:367}, {x:454.5, y:287}, {x:263.5, y:195}, {x:562.5, y:80}, {x:804.5, y:331}, {x:578.5, y:198}, {x:724.5, y:318}, {x:539.5, y:397}, {x:490.5, y:190.5}, {x:753.5, y:281}, {x:743.5, y:346}, {x:1034.5, y:238}, {x:847.5, y:380}, {x:381.5, y:89}, {x:888.5, y:156}, {x:874.5, y:97}, {x:816.5, y:78}, {x:930.5, y:83}, {x:1075.5, y:64}, {x:1109.5, y:132}, {x:1110.5, y:203}, {x:1023.5, y:227}, {x:1088.5, y:257}, {x:1102.5, y:316}, {x:913.5, y:365}], l = [{x:465.5, y:126, img:"right", size:34, move_by:23}, {x:125.5, y:133, img:"left", size:34, move_by:23}, {x:145.5, y:340, img:"left", size:38, move_by:18}, {x:307.5, y:263, img:"right", size:38, move_by:18}, {x:712.5, y:137, img:"right", size:43, move_by:8.5}, {x:595.5, y:318, img:"left", size:38, move_by:18}, {x:877.5, y:251, img:"left", size:43, move_by:8.5}, {x:1007.5, y:125, img:"left", size:34, move_by:23}, {x:994.5, y:348, img:"right", size:38, move_by:18}]; if(m.all && !k.setTimeout.isPolyfill) { var p = k.setTimeout; k.setTimeout = function(a, b) { var d = Array.prototype.slice.call(arguments, 2); return p(a instanceof Function ? function() { a.apply(null, d) } : a, b) }; k.setTimeout.isPolyfill = !0 } if(m.all && !k.setInterval.isPolyfill) { var q = k.setInterval; k.setInterval = function(a, b) { var d = Array.prototype.slice.call(arguments, 2); return q(a instanceof Function ? function() { a.apply(null, d) } : a, b) }; k.setInterval.isPolyfill = !0 } var a = {canvas:h("#canvas"), canvas_wrap:h("#canvas-wrap"), commitments:h("#commitments a"), hero_stories_divs:h(".icon-hero-story"), win:h(k), bubbles:{}, hero_stories:{}, hero_stories_hitarea:{}, walk_paths:{}, num_of_walk_paths:0, num_of_bubbles:0, story_icon:{}, move_over:0, walk_path_segments:0, walk_path_points:0, walk_path_hero:0, radius_max:40, opacity_min:0, opacity_max:1, increment_opacity:0, draw_path:!1, tool:{}, link_added:!1, lines:null, opacity_group:{}, fade_bubbles_incoment:0, lines_group:{}, all_lines:{}, draw_line_points:0, draw_line_segments:0, draw_lines:!1, draw_line_segment:0, fade_animation_state:!1, lock_links:!1, watch_moving:!0, small_circle_vs_big_circle:1.377, locations:{}, delay:!1, hero_hover_off_timer:[], debug:!1, commitment_cache:{}, hover_check:!1, init:function() { h("#full-report").hover(function() { a.watch_moving = !1 }, function() { a.watch_moving = !0 }); a.debug = !1; a.num_of_bubbles = 30; a.num_of_walk_paths = 10; a.walk_path_points = 2E3; a.walk_path_hero = 2E3; a.draw_line_points = 30; a.increment_opacity = 0.0015; a.opacity_min = 0.3; a.opacity_max = 1; a.fade_bubbles_incoment = 0.055; a.paint(); a.bindUIEvents(); a.add_elements(n, "bubble"); a.add_elements(l, "hero-story"); a.add_events(); a.opacity_group = new paper.Group(a.bubbles); a.opacity_group.addChild(a.hero_stories); paper.view.onFrame = a.runAnimateFrame; paper.view.onResize = a.runResize; paper.view.draw(); paper.view.viewSize = [a.canvas_wrap.width(), 450] }, bindUIEvents:function() { a.commitments.hover(function() { a.on_commitment_over(this) }, function() { a.off_commitment_over(this) }); a.commitments.click(function(c) { c.preventDefault(); a.on_commitment_click(this) }); h("#filter-1").on("click", "a", function(c) { var b = h(this), d = b.data("slug"); if(b = b.data("taxonomy")) { switch(d) { case "okanagan-campus": h("#filter-1 > .btn").html('Okanagan Campus <span class="caret"></span>'); b = "filter_1"; break; case "vancouver-campus": h("#filter-1 > .btn").html('Vancouver Campus <span class="caret"></span>'), b = "filter_1" } a.filter_bubbles(b, d) }else { h("#filter-1 > .btn").html('Campus <span class="caret"></span>'), a.show_all_bubbles() } c.preventDefault() }) }, paint:function() { h("#canvas").attr("width", a.canvas_wrap.width()); paper.setup("canvas"); a.bubbles = new paper.Group; a.hero_stories = new paper.Group; a.hero_stories_hitarea = new paper.Group; a.story_icon = new paper.Raster("icon-story"); a.story_icon.visible = !1; a.walk_paths = a.create_walk_paths(a.num_of_walk_paths); a.tool = new Tool; a.tool.onMouseMove = a.onMouseMove; a.tool.onMouseDown = a.onClick; a.lines_group = new paper.Group; a.all_lines = new paper.Group }, runAnimateFrame:function(c) { a.bubble_dance(c); a.hero_stories_dance(c); "finished" != a.fade_animation_state && a.animate_canvas(c); a.draw_lines && a.animate_dawing_lines(c) }, runResize:function() { paper.view.size.width = a.canvas_wrap.width() }, onClick:function() { a.remove_links() }, onMouseMove:function(c) { a.watch_moving && (a.bubbles.moving = !0, a.remove_links(), a.hit_test(c, "bubble"), a.hit_test(c, "hero")) }, hit_test:function(c, b) { var d = {}; switch(b) { case "hero": d = a.hero_stories.hitTest(c.point); break; case "bubble": d = a.bubbles.hitTest(c.point) } if(d && d.item && ("Path" == d.item.type || "hero" != b)) { "hero-story" == d.item.parent.kind && (d.item = d.item.parent), d.item.opacity = 1, !a.link_added && d.item.visible && a.add_link(d.item, d.item.num), a.bubbles.moving = !1 } }, create_walk_paths:function(c) { var b = new paper.Path; b.strokeColor = "black"; b.add(new paper.Point(0, 0)); b.add(new paper.Point(-10, 10)); b.add(new paper.Point(0, 20)); b.add(new paper.Point(10, 10)); b.add(new paper.Point(0, 0)); b.add(new paper.Point(-10, -10)); b.add(new paper.Point(0, -20)); b.add(new paper.Point(10, -10)); b.closed = !0; b.visible = !1; b.smooth(); a.walk_path_segments = b.length; for(var d = [], e = 0;e < c;e++) { var f = b.clone(); f.fullySelected = !1; f.rotate(180 / c * e); f.visible = !1; d.push(f) } return d }, adjusted_x:function(a) { return a * (paper.view.size.width / 1170) }, add_elements:function(c, b) { for(var d = 0, d = "bubble" == b ? loop_json.story.length : c.length, e = 0;e < d;e++) { var f = new paper.Point(a.adjusted_x(c[e].x), c[e].y), g = {}; switch(b) { case "hero-story": g = a.create_elements_item(f, e, b); a.hero_stories.addChild(g); break; case "bubble": g = a.create_elements_item(f, e, b), a.bubbles.addChild(g) } } }, create_elements_item:function(c, b, d) { var e = {}; switch(d) { case "bubble": var e = a.story_icon.clone(), f = a.random(a.radius_max * a.opacity_min, a.radius_max); e.opacity = f / a.radius_max; break; case "hero-story": e = new paper.Group; f = new paper.Raster("hero-story" + b); f.scale(0.8); f.position = c; var g = a.get_circle_position(c, l[b], f, "bottom", 0.8), g = new paper.Path.Circle(g, l[b].size); g.fillColor = "white"; g.opacity = 0; var h = a.get_circle_position(c, l[b], f, "top", 0.8), h = new paper.Path.Circle(h, l[b].size * a.small_circle_vs_big_circle); h.fillColor = "white"; h.opacity = 0; e.addChild(f); e.addChild(g); e.addChild(h) } e.kind = d; e.visible = !0; e.increase_opacity = !0; e.num = b; e.walk_path = a.walk_paths[Math.floor(Math.random() * a.num_of_walk_paths)]; e.position = c; return e }, filter_bubbles:function(c, b) { a.show_all_bubbles(!1); if("filter_1" == c) { for(var d = loop_json.story.length, e = 0;e < d;e++) { if(loop_json.story[e].filter_1) { for(var f = 0;f < loop_json.story[e].filter_1.length;f++) { "undefined" != typeof loop_json.story[e].filter_1[f] && loop_json.story[e].filter_1[f].slug == b && (a.bubbles.children[e].visible = !0) } } } d = loop_json.hero.length; for(e = 0;e < d;e++) { if(loop_json.hero[e].filter_1) { for(f = 0;f < loop_json.hero[e].filter_1.length;f++) { "undefined" != typeof loop_json.hero[e].filter_1[f] && loop_json.hero[e].filter_1[f].slug == b && (a.hero_stories.children[e].visible = !0) } } } } }, show_all_bubbles:function(c) { c = "undefined" !== typeof c ? c : !0; for(var b = loop_json.story.length, d = 0;d < b;d++) { a.bubbles.children[d].visible = c } b = loop_json.hero.length; for(d = 0;d < b;d++) { a.hero_stories.children[d].visible = c } }, add_events:function() { a.hero_stories_divs.find(".small-circle").each(function(c) { a.add_hover_over_event(c, this) }); a.hero_stories_divs.find(".big-circle").each(function(c) { a.add_hover_over_event(c, this) }) }, add_hover_over_event:function(c, b) { h(b).on({mouseenter:function() { a.hero_hover_off_timer[c] ? (clearTimeout(a.hero_hover_off_timer[c]), a.hero_hover_off_timer[c] = null) : a.hover_over_hero_story(a.hero_stories.children[c], c, this) }, mouseleave:function() { a.hero_hover_off_timer[c] = setTimeout(a.hover_off_hero_story, 100, a.hero_stories.children[c], c, this) }}) }, resize_circle:function(a, b, d) { d || (d = b); var e = new paper.Size(b, d); b = new paper.Path.Rectangle(new paper.Point(a.position.x - b / 2, a.position.y - d / 2), e); a.fitBounds(b.bounds); b.remove() }, random:function(a, b) { return Math.floor(Math.random() * (b - a + 1) + a) }, bubble_dance:function() { if(!a.link_added) { a.bubbles.moving && a.move_over++; a.move_over > a.walk_path_points && (a.move_over = 0); for(var c = a.bubbles.children.length, b = 0;b < c;b++) { a.update_opacity(a.bubbles.children[b]), a.update_movement(a.bubbles.children[b]) } } }, hero_stories_dance:function() { if(!a.link_added) { for(var c = a.hero_stories.children.length, b = 0;b < c;b++) { a.update_movement(a.hero_stories.children[b]) } } }, update_opacity:function(c) { c.increase_opacity ? (c.opacity > a.opacity_max && (c.increase_opacity = !1), c.opacity += a.increment_opacity) : (c.opacity < a.opacity_min && (c.increase_opacity = !0), c.opacity -= a.increment_opacity) }, update_movement:function(c) { if(a.bubbles.moving) { var b = c.walk_path.getPointAt(a.move_over / a.walk_path_points * a.walk_path_segments); c.fixed_x || (c.fixed_x = c.position.x, c.fixed_y = c.position.y); b = (new paper.Point(c.fixed_x, c.fixed_y)).add(b); c.position.x = b.x; c.position.y = b.y; a.debug && a.draw_dot(b) } }, animate_canvas:function() { "animating" == a.fade_animation_state ? a.opacity_group.opacity > a.opacity_min ? a.opacity_group.opacity -= a.fade_bubbles_incoment : a.fade_animation_state = "finished" : a.opacity_group.opacity <= a.opacity_max ? a.opacity_group.opacity += a.fade_bubbles_incoment : a.fade_animation_state = "finished" }, fade_canvas:function(c) { a.fade_animation_state = "animating"; a.commitments.addClass("hide-away"); c.addClass("still-show") }, show_canvas:function() { a.commitments.removeClass("hide-away").removeClass("still-show"); a.fade_animation_state = "show" }, add_link:function(c, b) { h("#bubbles"); if("bubble" == c.kind) { h(a.bubble_link_template(loop_json.story[b], b, "")).appendTo(a.canvas_wrap).css({left:c.position.x - 37, top:c.position.y + 41}).hover(function() { a.hover_over_bubble(c, loop_json.story[b], this, !0) }, function() { a.hover_off_bubble(c, this, !0) }).on("click", function() { a.click_bubble(loop_json.story[b]) }) }else { a.hero_stories_divs.eq(b).removeClass("icon-hide").css({left:c.position.x - 0.8 * c.children[0].width / 2, width:0.8 * c.children[0].width, top:c.position.y + l[b].move_by}) } }, click_bubble:function(a) { void 0 != typeof a && (k.location.href = a.permalink) }, hover_over_bubble:function(c, b, d, e) { if(e) { a.link_added = !0; e = b.commitments.length; var f = new paper.Point(c.position.x, c.position.y); c.visible = !0; for(c = 0;c < e;c++) { var g = h("#" + b.commitments[c].slug); a.fade_canvas(g); var j = g.position(), g = g.width(), j = new paper.Point(j.left + g / 2, j.top); a.draw_curve_line(j, f) } } h(d).find(".bubble-link-excerpt").addClass("show").animate({height:100}, 100) }, hover_off_bubble:function(c, b, d) { d && (a.link_added = !1, c.visible = !0, a.lines_group.removeChildren(), a.all_lines.removeChildren(), h(this).on("mousemove", a.mouse_move_off_bubble), a.show_canvas()); h(b).find(".bubble-link-excerpt").removeClass("show").css({height:0}) }, hover_over_hero_story:function(c, b, d) { if(!a.lock_links) { var e = c.children[0].height - c.children[0].height, f = c.children[0].width - c.children[0].width; a.scale_up_hero_story(c, b, d); a.link_added = !0; var g = h("#" + loop_json.hero[b].commitments[0].slug); a.fade_canvas(g); var j = g.position(), g = g.width(), j = new paper.Point(j.left + g / 2, j.top), e = new paper.Point(c.children[1].position.x + f / 2, c.children[1].position.y - e / 2); a.draw_curve_line(j, e); a.delay = !0; setTimeout(function() { a.delay = !1 }, 200); a.hover_check = setInterval(function() { h(d).parent().is(":hover") || (a.hover_off_hero_story(c, b, d), clearInterval(a.hover_check)) }, 201) } }, hover_off_hero_story:function(c, b, d) { !a.lock_links && !a.delay && (a.hero_hover_off_timer[b] && (a.hero_hover_off_timer[b] = null), a.scale_down_hero_story(c, b, d), a.hero_stories_divs.addClass("icon-hide"), a.show_canvas(), a.link_added = !1, c.visible = !0, a.lines_group.removeChildren(), a.all_lines.removeChildren()) }, scale_up_hero_story:function(c, b, d) { d = h(d); c.visible = !1; var e = c.children[0].width, f = c.children[0].height - c.children[0].height; c = e - c.children[0].width; var g = 2.5 * l[b].size, j = {}, j = "left" == l[b].img ? {width:e, marginTop:-f, marginLeft:-c} : {width:e, marginTop:-f}; d.parent().animate(j, 100); d.hasClass("small-circle") ? (d.siblings("a").width(g * a.small_circle_vs_big_circle).height(g * a.small_circle_vs_big_circle), d.width(g).height(g)) : (d.width(g * a.small_circle_vs_big_circle).height(g * a.small_circle_vs_big_circle), d.siblings("a").width(g).height(g)) }, scale_down_hero_story:function(c, b, d) { d = h(d); c = c.children[0].width; b = 2 * l[b].size; d.parent().width(c); d.parent().css({margin:0}); d.hasClass("small-circle") ? (d.width(b).height(b), d.siblings("a").width(b * a.small_circle_vs_big_circle).height(b * a.small_circle_vs_big_circle)) : (d.width(b * a.small_circle_vs_big_circle).height(b * a.small_circle_vs_big_circle), d.siblings("a").width(b).height(b)) }, bubble_link_template:function(a, b, d) { b = '<div class="bubble-wrap" id="bubble-wrap-' + b + '"><div class="bubble-paper bubble ' + d + '"><a href="' + a.permalink + '" class="bubble-link">'; b += '<span class="bubble-link-shell"> ' + a.title + '</span><span class="bubble-link-excerpt">' + a.excerpt + ' <span class="bubble-readmore">read more</span> </span>'; return b + "</a></div></div>" }, mouse_move_off_bubble:function() { }, add_bright_link:function(c, b, d) { h(a.bubble_link_template(b, d, "bubble-bright")).appendTo(a.canvas_wrap).css({left:c.position.x - 37, top:c.position.y + 41}).hover(function() { a.hover_over_bubble(c, loop_json.story[d], this, !1) }, function() { a.hover_off_bubble(c, this, !1) }).on("click", function() { a.click_bubble(loop_json.story[d]) }) }, remove_links:function() { a.link_added || (a.canvas_wrap.find(".bubble-wrap").remove(), a.hero_stories_divs.addClass("icon-hide")) }, animate_dawing_lines:function() { var c = a.lines_group.children.length; if(c) { if(a.draw_line_segment > a.walk_path_points + 2) { a.draw_lines = !1 }else { for(var b = 0;b < c;b++) { a.draw_animated_line(a.lines_group.children[b]) } a.draw_line_segment++ } } }, get_circle_position:function(c, b, d, e, f) { var g = b.size; "bottom" == e ? (e = d.height * f / 2 - g, b = "right" == b.img ? -(d.width * f / 2) + g : d.width * f / 2 - g) : (g *= a.small_circle_vs_big_circle, e = -(d.height * f / 2) + g, b = "right" == b.img ? d.width * f / 2 - g : -(d.width * f / 2) + g); b = new paper.Point(b, e); return c.add(b) }, draw_dot:function(a, b) { (new Path.Circle(a, 1)).fillColor = "undefined" !== typeof b ? b : "red" }, draw_animated_line:function(c) { var b = c.getPointAt(c.length / a.draw_line_points * a.draw_line_segment); b && (c.animated_line.add(b), c.animated_line.smooth()); a.debug && a.draw_dot(b) }, draw_curve_line:function(c, b) { var d = 0, d = c.x < b.x ? -200 : 200, e = new paper.Path, f = new paper.Point(c.x, 40), d = new paper.Point(b.x + d, b.y + 20); e.moveTo(c); e.cubicCurveTo(f, d, b); e.strokeColor = "white"; e.opacity = 0; e.animated_line = new paper.Path; e.animated_line.strokeColor = "white"; e.animated_line.opacity = 0.4; e.animated_line.add(c); a.lines_group.addChild(e); a.all_lines.addChild(e.animated_line); a.draw_lines = !0; a.draw_line_segment = 0 }, on_commitment_over:function(c) { if(!a.lock_links) { a.link_added = !0; var b = h(c); c = b.attr("id"); a.fade_canvas(b); var d = b.position(), b = b.width(), d = new paper.Point(d.left + b / 2, d.top); if("undefined" === typeof a.commitment_cache[c] || 0 == a.commitment_cache[c].lenght) { a.commitment_cache[c] = []; for(var e = a.bubbles.children.length, b = 0;b < e;b++) { for(var f = loop_json.story[b], g = f.commitments.length, j = 0;j < g;j++) { if(c == f.commitments[j].slug && a.bubbles.children[b].visible) { var k = new paper.Point(a.bubbles.children[b].position.x, a.bubbles.children[b].position.y); a.add_bright_link(a.bubbles.children[b], loop_json.story[b], b); a.draw_curve_line(d, k); a.commitment_cache[c].push(b) } } } }else { e = a.commitment_cache[c].length; for(j = 0;j < e;j++) { b = a.commitment_cache[c][j], a.bubbles.children[b].visible && (k = new paper.Point(a.bubbles.children[b].position.x, a.bubbles.children[b].position.y), a.add_bright_link(a.bubbles.children[b], loop_json.story[b], b), a.draw_curve_line(d, k)) } } for(b = 0;9 > b;b++) { if(c == loop_json.hero[b].commitments[0].slug) { var l = b } } k = new paper.Point(a.hero_stories.children[l].children[1].position.x, a.hero_stories.children[l].children[1].position.y); a.add_link(a.hero_stories.children[l], l); a.draw_curve_line(d, k) } }, off_commitment_over:function() { a.lock_links || (a.link_added = !1, a.draw_lines = !1, a.lines_group.removeChildren(), a.all_lines.removeChildren(), a.remove_links(), a.show_canvas()) }, on_commitment_click:function(c) { a.lock_links ? (a.lock_links = !1, a.commitments.removeClass("locked")) : (a.lock_links = !0, h(c).addClass("locked")) }}; paper.install(k); h(m).ready(a.init) })(document, window, jQuery);